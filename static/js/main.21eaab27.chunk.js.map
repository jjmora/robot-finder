{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","id","email","console","log","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAkBeA,MAdf,SAAcC,GACZ,OACE,mCACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,SAASD,UAAU,eAAeE,IAAG,gDAA2CH,EAAMI,QAAQC,KAAzD,UAC9C,qBAAKH,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQE,GAAxC,4BACtB,6BAAKN,EAAMI,QAAQC,OACnB,6BAAKL,EAAMI,QAAQG,QACnB,4BAAIC,QAAQC,IAAIT,EAAMI,iB,MCGfM,MAVf,SAAkBV,GAChB,OACE,qBAAKC,UAAU,YAAf,SACID,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQE,U,MCOZO,MAbf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,mCACE,uBACEd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAWF,OCmCJG,E,kDAvCb,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAACT,SAAUkB,S,oBAO3C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAChC,SAAA5B,GAAO,OAAIA,EAAQC,KAAK4B,cAAcC,SAASb,EAAYY,kBAG7D,OACE,sBAAKhC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEe,KAAK,SACLF,YAAY,kBACZC,aAAee,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21eaab27.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Card.css'\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <>\r\n      <div className=\"card-container\">\r\n        <img alt=\"avatar\" className=\"avatar-image\" src={`https://avatars.dicebear.com/api/male/${props.monster.name}.svg`} />\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <h3>{props.monster.email}</h3>\r\n        <p>{console.log(props.monster)}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from '../card/Card'\r\n\r\nimport './CardList.css'\r\n\r\nfunction CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      { props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n      )) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport './SearchBox.css'\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <>\r\n      <input \r\n        className=\"search\"\r\n        type=\"search\" \r\n        placeholder={placeholder}\r\n        onChange={ handleChange } \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import { Component } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/CardList';\nimport SearchBox from './components/search-box/SearchBox';\n\nclass App extends Component {\n  constructor(){\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState( {monsters: users} ))\n  }\n  \n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Robot Finder</h1>\n        <SearchBox \n          type=\"search\"\n          placeholder=\"Filter monsters\"\n          handleChange={ this.handleChange } \n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}